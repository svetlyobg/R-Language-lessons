#More on Data Frames
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
#accessing individual column
x$age
#More on Data Frames
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
#accessing individual column
x$age
#or...
x[age]
#More on Data Frames
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
#accessing individual column
x$age
#or...
x[2]
#More on Data Frames
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
#accessing individual column
x$age
#or...
x[2]
#accessing 2nd row & 2nd column
x[2.2]
#More on Data Frames
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
#accessing individual column
x$age
#or...
x[2]
#accessing 2nd row & 2nd column
x[2,2]
#More on Data Frames
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
#accessing individual column
x$age
#or...
x[2]
#accessing 2nd row & 2nd column
x[2,2]
#return one row and multiple columns
x[3, 1:3]
#More on Data Frames
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
#accessing individual column
x$age
#or...
x[2]
#accessing 2nd row & 2nd column
x[2,2]
#return one row and multiple columns
x[3, 1:3]
#return row 3
x[3, ]
#More on Data Frames
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
#accessing individual column
x$age
#or...
x[2]
#accessing 2nd row & 2nd column
x[2,2]
#return one row and multiple columns
x[3, 1:3]
#return row 3
x[3, ]
#return col 3
x[ ,3]
#More on Data Frames
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
#accessing individual column
x$age
#or...
x[2]
#accessing 2nd row & 2nd column
x[2,2]
#return one row and multiple columns
x[3, 1:3]
#return row 3
x[3, ]
#return col 3
x[ ,3]
#return var type
class(x["age"])
#More on Data Frames
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
#accessing individual column
x$age
#or...
x[2]
#accessing 2nd row & 2nd column
x[2,2]
#return one row and multiple columns
x[3, 1:3]
#return row 3
x[3, ]
#return col 3
x[ ,3]
#return var type
class(x["age"])
#do this instead
class(x[ ,"age"])
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
svetlyoList <- list(23, "meat", c(1:5), "programming", x)
svetlyoList
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
svetlyoList <- list(23, "meat", c(1:5), "programming", x)
svetlyoList
#name the elements for easy access
names(svetlyoList) <- c("myAge", "food", "someVector", "bestAt", "myDF")
svetlyoList[["myAge"]]
#Lists
#Lists are cooler than Vectors because
#...vectors can store vars of the same type
#...while Lists can store multiple data types!!!
#Lists can store also DataFames & other lists!!!
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
svetlyoList <- list(23, "meat", c(1:5), "programming", x)
svetlyoList
#name the elements for easy access
names(svetlyoList) <- c("myAge", "food", "someVector", "bestAt", "myDF")
svetlyoList[["myAge"]]
svetlyoList[["myDF"]]$age
#Lists
#Lists are cooler than Vectors because
#...vectors can store vars of the same type
#...while Lists can store multiple data types!!!
#Lists can store also DataFames & other lists!!!
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
svetlyoList <- list(23, "meat", c(1:5), "programming", x)
svetlyoList
#name the elements for easy access
names(svetlyoList) <- c("myAge", "food", "someVector", "bestAt", "myDF")
svetlyoList[["myAge"]]
svetlyoList[["myDF"]]$age
#add new element in the list
length(svetlyoList)
#Lists
#Lists are cooler than Vectors because
#...vectors can store vars of the same type
#...while Lists can store multiple data types!!!
#Lists can store also DataFames & other lists!!!
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
svetlyoList <- list(23, "meat", c(1:5), "programming", x)
svetlyoList
#name the elements for easy access
names(svetlyoList) <- c("myAge", "food", "someVector", "bestAt", "myDF")
svetlyoList[["myAge"]]
svetlyoList[["myDF"]]$age
#return length of the list
length(svetlyoList)
#add new element in the list
svetlyoList[["lastName"]] <- "Kosev"
svetlyoList
length(svetlyoList)
#Lists
#Lists are cooler than Vectors because
#...vectors can store vars of the same type
#...while Lists can store multiple data types!!!
#Lists can store also DataFames & other lists!!!
id <- 1:15
age <- c(18,13,66,32,3,43,54,656,87,323,7,2,9,34,65)
name <- c ("bucky","tom","bobby","henry","emily","baby","hannah","joe","cathy","sandY","lesley","emma","ann","old dan","eric")
x <- data.frame(id, age, name)
svetlyoList <- list(23, "meat", c(1:5), "programming", x)
svetlyoList
#name the elements for easy access
names(svetlyoList) <- c("myAge", "food", "someVector", "bestAt", "myDF")
svetlyoList[["myAge"]]
svetlyoList[["myDF"]]$age
#return length of the list
length(svetlyoList)
#add new element in the list
svetlyoList[["lastName"]] <- "Kosev"
svetlyoList
length(svetlyoList)
svetlyoList$lastName
